{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","CSSTransition","TransitionGroup","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","e","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","details","src","alt","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.483dcecb.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers';\n\nclass StorePicker extends Component {\n  myInput = React.createRef();\n\n  static propTypes = {\n    history: PropTypes.object,\n  };\n\n  goToStore = (event) => {\n    // stop form from submitting\n    event.preventDefault();\n    //get the text from the input\n    const storeName = this.myInput.current.value;\n    //change the page to /store/theName\n    this.props.history.push(`/store/${storeName}`);\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <form className='store-selector' onSubmit={this.goToStore}>\n          <h2>Please Enter A Store</h2>\n\n          <input\n            type='text'\n            ref={this.myInput}\n            required\n            placeholder='Store Name'\n            defaultValue={getFunName()}\n          />\n          <button type='submit'>Visit Store</button>\n        </form>\n      </Fragment>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ tagline }) => (\n  <div className='top'>\n    <h1>\n      Catch\n      <span className='ofThe'>\n        <span className='of'>Of</span>\n        <span className='the'>The</span>\n      </span>\n      Day\n    </h1>\n    <h3 className='tagline'>\n      <span>{tagline}</span>\n    </h3>\n  </div>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport {TransitionGroup, CSSTransition } from 'react-transition-group';\n\nclass Order extends Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func,\n  };\n\n  renderOrder = (key) => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === 'available';\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: {enter: 500, exit: 500}\n    };\n\n    // make sure fish is loaded before continue\n    if (!fish) return null;\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : 'fish'} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" classNames=\"count\">\n                <CSSTransition \n                  classNames='count' \n                  key={count} \n                  timeout={{enter:500, exit:500}}\n                >\n                  <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === 'available';\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n\n    return (\n      <div className='order-wrap'>\n        <h2>Order</h2>\n        <TransitionGroup component='ul' className='order'>\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className='total'>\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func,\n  }\n\n  createFish = (e) => {\n    e.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value,\n    };\n    this.props.addFish(fish);\n    //refresh form\n    e.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className='fish-edit' onSubmit={this.createFish}>\n        <input name='name' ref={this.nameRef} type='text' placeholder='Name' />\n        <input\n          name='price'\n          ref={this.priceRef}\n          type='text'\n          placeholder='Price'\n        />\n        <select name='status' ref={this.statusRef}>\n          <option value='available'>Fresh!</option>\n          <option value='unavailable'>Sold Out!</option>\n        </select>\n        <textarea\n          name='desc'\n          ref={this.descRef}\n          type='text'\n          placeholder='Desc'\n        />\n        <input\n          name='image'\n          ref={this.imageRef}\n          type='text'\n          placeholder='Image'\n        />\n        <button type='submit'>+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.string,\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n  };\n\n  handleChange = (event) => {\n    console.log(event.currentTarget.name);\n    //update the fish\n    //copy of current fish\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value,\n    };\n    console.log(updatedFish);\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n\n  render() {\n    return (\n      <div className='fish-edit'>\n        <input\n          type='text'\n          name='name'\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type='text'\n          name='price'\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type='text'\n          name='status'\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value='available'>Fresh!</option>\n          <option value='unavailable'>Sold Out!</option>\n        </select>\n        <textarea\n          name='desc'\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type='text'\n          name='image'\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\n      </div>\n    );\n  }\n}\nexport default EditFishForm;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => (\n    <nav className=\"login\">\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage your store's inventory</p>\n        <button \n            className='github' \n            onClick={() => props.authenticate('Github')}\n        >\n            Log In With GitHub\n        </button>\n    </nav>\n\n);\n\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: 'AIzaSyCP4t3LtuY40VPVAmKkbeMZdRN8sstPr5w',\n  authDomain: 'catch-of-the-day-83b77.firebaseapp.com',\n  databaseURL: 'https://catch-of-the-day-83b77-default-rtdb.firebaseio.com',\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// named export\nexport { firebaseApp };\n// default export\nexport default base;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n    addFish: PropTypes.func,\n  };\n\n  state = { \n    uid: null,\n    owner: null\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if(user) {\n        this.authHandler({user});\n      }\n    })\n  }\n\n  authHandler = async (authData) => {\n    // look for current store in database\n    const store = await base.fetch(this.props.storeId, {context: this});\n    console.log(store);\n    // claim it if there is no owner (no prev login)\n    if(!store.owner){\n      // save it as the owner\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      })\n    }\n    // set state of inventory component to match current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n\n  }\n\n  authenticate = (provider) => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log('Logging Out');\n    await firebase.auth().signOut();\n    this.setState({uid: null})\n  }\n\n  render() {\n    const logout = <button onClick={this.logout}>Logout</button>\n    //check if logged in\n    if (!this.state.uid){\n    return <Login authenticate={this.authenticate}/>\n    }\n    //check if they are not the owner and cant view inventory\n    if(this.state.uid !== this.state.owner){\n      return(\n        <div>\n          <p>Sorry you are not the owner</p>\n          {logout}\n        </div>   \n      ) \n    }\n    // owner then render inventory\n    return (\n      <div className='inventory'>\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map((key) => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      price: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.number,\n    }),\n    addToOrder: PropTypes.func,\n    index: PropTypes.string,\n  };\n\n  handleClick = () => {\n    this.props.addToOrder(this.props.index);\n  };\n\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === 'available';\n    return (\n      <li className='menu-fish'>\n        <img src={image} alt={name}></img>\n        <h3 className='fish-name'>\n          {name}\n          <span className='price'>{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button disabled={!isAvailable} onClick={this.handleClick}>\n          {isAvailable ? 'Add To Order' : 'Sold Out!'}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends Component {\n  state = {\n    fishes: {},\n    order: {},\n  };\n\n  static propTypes = {\n    match: PropTypes.object,\n  }\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reninstate our localStorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n    console.log(localStorageRef);\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: 'fishes',\n    });\n  }\n  // invoked immedietly after update occurs to load data to local storage\n  componentDidUpdate() {\n    console.log(this.state.order);\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n    console.log('updated');\n  }\n\n  // to prevent memory leak undo what has been mounted\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = (fish) => {\n    // take a copy of existing state\n    const fishes = { ...this.state.fishes };\n    // add our new fish to fishes\n    fishes[`fish${Date.now()}`] = fish;\n    // set the new fishes object to state\n    this.setState({ fishes: fishes });\n  };\n\n  updateFish = (key, updatedFish) => { \n    //take copy of current state\n    const fishes = { ...this.state.fishes };\n    //update the state\n    fishes[key] = updatedFish;\n    //set that state\n    this.setState({ fishes });\n  };\n\n  deleteFish = (key) => {\n    //take copy of state\n    const fishes = { ...this.state.fishes }\n    //update state\n    fishes[key]= null;\n    //update state\n    this.setState({ fishes });\n  }\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n\n  addToOrder = (key) => {\n    //take copy of state\n    const order = { ...this.state.order };\n    //Add to order or update qty\n    order[key] = order[key] + 1 || 1;\n    //Call setState to update state\n    this.setState({ order });\n  };\n\n  removeFromOrder = (key) => {\n    const order = { ...this.state.order };\n    //remove item from order\n    delete order[key];\n    this.setState({ order });\n  }\n\n  render() {\n    return (\n      <div className='catch-of-the-day'>\n        <div className='menu'>\n          <Header tagline='Fresh Seafood Market' />\n          <ul className='fishes'>\n            {Object.keys(this.state.fishes).map((key) => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order fishes={this.state.fishes} order={this.state.order} removeFromOrder={this.removeFromOrder}/>\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found!</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path='/' component={StorePicker} />\n      <Route path='/store/:storeId' component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router />, document.querySelector('#main'));\n"],"sourceRoot":""}