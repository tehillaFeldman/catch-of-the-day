{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/tehillafeldman/Documents/repos/personal/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = gatherSequenceExpressions;\n\nvar _getBindingIdentifiers = require(\"../retrievers/getBindingIdentifiers\");\n\nvar _generated = require(\"../validators/generated\");\n\nvar _generated2 = require(\"../builders/generated\");\n\nvar _cloneNode = require(\"../clone/cloneNode\");\n\nfunction gatherSequenceExpressions(nodes, scope, declars) {\n  var exprs = [];\n  var ensureLastUndefined = true;\n\n  var _iterator = _createForOfIteratorHelper(nodes),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var node = _step.value;\n\n      if (!(0, _generated.isEmptyStatement)(node)) {\n        ensureLastUndefined = false;\n      }\n\n      if ((0, _generated.isExpression)(node)) {\n        exprs.push(node);\n      } else if ((0, _generated.isExpressionStatement)(node)) {\n        exprs.push(node.expression);\n      } else if ((0, _generated.isVariableDeclaration)(node)) {\n        if (node.kind !== \"var\") return;\n\n        var _iterator2 = _createForOfIteratorHelper(node.declarations),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var declar = _step2.value;\n            var bindings = (0, _getBindingIdentifiers.default)(declar);\n\n            for (var _i = 0, _Object$keys = Object.keys(bindings); _i < _Object$keys.length; _i++) {\n              var key = _Object$keys[_i];\n              declars.push({\n                kind: node.kind,\n                id: (0, _cloneNode.default)(bindings[key])\n              });\n            }\n\n            if (declar.init) {\n              exprs.push((0, _generated2.assignmentExpression)(\"=\", declar.id, declar.init));\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        ensureLastUndefined = true;\n      } else if ((0, _generated.isIfStatement)(node)) {\n        var consequent = node.consequent ? gatherSequenceExpressions([node.consequent], scope, declars) : scope.buildUndefinedNode();\n        var alternate = node.alternate ? gatherSequenceExpressions([node.alternate], scope, declars) : scope.buildUndefinedNode();\n        if (!consequent || !alternate) return;\n        exprs.push((0, _generated2.conditionalExpression)(node.test, consequent, alternate));\n      } else if ((0, _generated.isBlockStatement)(node)) {\n        var body = gatherSequenceExpressions(node.body, scope, declars);\n        if (!body) return;\n        exprs.push(body);\n      } else if ((0, _generated.isEmptyStatement)(node)) {\n        if (nodes.indexOf(node) === 0) {\n          ensureLastUndefined = true;\n        }\n      } else {\n        return;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  if (ensureLastUndefined) {\n    exprs.push(scope.buildUndefinedNode());\n  }\n\n  if (exprs.length === 1) {\n    return exprs[0];\n  } else {\n    return (0, _generated2.sequenceExpression)(exprs);\n  }\n}","map":{"version":3,"sources":["/Users/tehillafeldman/Documents/repos/personal/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/@babel/types/lib/converters/gatherSequenceExpressions.js"],"names":["Object","defineProperty","exports","value","default","gatherSequenceExpressions","_getBindingIdentifiers","require","_generated","_generated2","_cloneNode","nodes","scope","declars","exprs","ensureLastUndefined","node","isEmptyStatement","isExpression","push","isExpressionStatement","expression","isVariableDeclaration","kind","declarations","declar","bindings","keys","key","id","init","assignmentExpression","isIfStatement","consequent","buildUndefinedNode","alternate","conditionalExpression","test","isBlockStatement","body","indexOf","length","sequenceExpression"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = gatherSequenceExpressions;\n\nvar _getBindingIdentifiers = require(\"../retrievers/getBindingIdentifiers\");\n\nvar _generated = require(\"../validators/generated\");\n\nvar _generated2 = require(\"../builders/generated\");\n\nvar _cloneNode = require(\"../clone/cloneNode\");\n\nfunction gatherSequenceExpressions(nodes, scope, declars) {\n  const exprs = [];\n  let ensureLastUndefined = true;\n\n  for (const node of nodes) {\n    if (!(0, _generated.isEmptyStatement)(node)) {\n      ensureLastUndefined = false;\n    }\n\n    if ((0, _generated.isExpression)(node)) {\n      exprs.push(node);\n    } else if ((0, _generated.isExpressionStatement)(node)) {\n      exprs.push(node.expression);\n    } else if ((0, _generated.isVariableDeclaration)(node)) {\n      if (node.kind !== \"var\") return;\n\n      for (const declar of node.declarations) {\n        const bindings = (0, _getBindingIdentifiers.default)(declar);\n\n        for (const key of Object.keys(bindings)) {\n          declars.push({\n            kind: node.kind,\n            id: (0, _cloneNode.default)(bindings[key])\n          });\n        }\n\n        if (declar.init) {\n          exprs.push((0, _generated2.assignmentExpression)(\"=\", declar.id, declar.init));\n        }\n      }\n\n      ensureLastUndefined = true;\n    } else if ((0, _generated.isIfStatement)(node)) {\n      const consequent = node.consequent ? gatherSequenceExpressions([node.consequent], scope, declars) : scope.buildUndefinedNode();\n      const alternate = node.alternate ? gatherSequenceExpressions([node.alternate], scope, declars) : scope.buildUndefinedNode();\n      if (!consequent || !alternate) return;\n      exprs.push((0, _generated2.conditionalExpression)(node.test, consequent, alternate));\n    } else if ((0, _generated.isBlockStatement)(node)) {\n      const body = gatherSequenceExpressions(node.body, scope, declars);\n      if (!body) return;\n      exprs.push(body);\n    } else if ((0, _generated.isEmptyStatement)(node)) {\n      if (nodes.indexOf(node) === 0) {\n        ensureLastUndefined = true;\n      }\n    } else {\n      return;\n    }\n  }\n\n  if (ensureLastUndefined) {\n    exprs.push(scope.buildUndefinedNode());\n  }\n\n  if (exprs.length === 1) {\n    return exprs[0];\n  } else {\n    return (0, _generated2.sequenceExpression)(exprs);\n  }\n}"]},"metadata":{},"sourceType":"script"}