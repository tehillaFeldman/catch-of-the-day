{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = builder;\n\nvar _definitions = require(\"../definitions\");\n\nvar _validate = require(\"../validators/validate\");\n\nfunction builder() {\n  var type = this;\n  var keys = _definitions.BUILDER_KEYS[type];\n  var countArgs = arguments.length;\n\n  if (countArgs > keys.length) {\n    throw new Error(\"\".concat(type, \": Too many arguments passed. Received \").concat(countArgs, \" but can receive no more than \").concat(keys.length));\n  }\n\n  var node = {\n    type\n  };\n\n  for (var i = 0; i < keys.length; ++i) {\n    var key = keys[i];\n    var field = _definitions.NODE_FIELDS[type][key];\n    var arg = void 0;\n    if (i < countArgs) arg = arguments[i];\n\n    if (arg === undefined) {\n      arg = Array.isArray(field.default) ? [] : field.default;\n    }\n\n    node[key] = arg;\n  }\n\n  for (var _key in node) {\n    (0, _validate.default)(node, _key, node[_key]);\n  }\n\n  return node;\n}","map":{"version":3,"sources":["/Users/tehillafeldman/Documents/repos/personal/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/@babel/types/lib/builders/builder.js"],"names":["Object","defineProperty","exports","value","default","builder","_definitions","require","_validate","type","keys","BUILDER_KEYS","countArgs","arguments","length","Error","node","i","key","field","NODE_FIELDS","arg","undefined","Array","isArray"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,OAAlB;;AAEA,IAAIC,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA1B;;AAEA,IAAIC,SAAS,GAAGD,OAAO,CAAC,wBAAD,CAAvB;;AAEA,SAASF,OAAT,GAAmB;AACjB,MAAMI,IAAI,GAAG,IAAb;AACA,MAAMC,IAAI,GAAGJ,YAAY,CAACK,YAAb,CAA0BF,IAA1B,CAAb;AACA,MAAMG,SAAS,GAAGC,SAAS,CAACC,MAA5B;;AAEA,MAAIF,SAAS,GAAGF,IAAI,CAACI,MAArB,EAA6B;AAC3B,UAAM,IAAIC,KAAJ,WAAaN,IAAb,mDAA0DG,SAA1D,2CAAoGF,IAAI,CAACI,MAAzG,EAAN;AACD;;AAED,MAAME,IAAI,GAAG;AACXP,IAAAA;AADW,GAAb;;AAIA,OAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,IAAI,CAACI,MAAzB,EAAiC,EAAEG,CAAnC,EAAsC;AACpC,QAAMC,GAAG,GAAGR,IAAI,CAACO,CAAD,CAAhB;AACA,QAAME,KAAK,GAAGb,YAAY,CAACc,WAAb,CAAyBX,IAAzB,EAA+BS,GAA/B,CAAd;AACA,QAAIG,GAAG,SAAP;AACA,QAAIJ,CAAC,GAAGL,SAAR,EAAmBS,GAAG,GAAGR,SAAS,CAACI,CAAD,CAAf;;AAEnB,QAAII,GAAG,KAAKC,SAAZ,EAAuB;AACrBD,MAAAA,GAAG,GAAGE,KAAK,CAACC,OAAN,CAAcL,KAAK,CAACf,OAApB,IAA+B,EAA/B,GAAoCe,KAAK,CAACf,OAAhD;AACD;;AAEDY,IAAAA,IAAI,CAACE,GAAD,CAAJ,GAAYG,GAAZ;AACD;;AAED,OAAK,IAAMH,IAAX,IAAkBF,IAAlB,EAAwB;AACtB,KAAC,GAAGR,SAAS,CAACJ,OAAd,EAAuBY,IAAvB,EAA6BE,IAA7B,EAAkCF,IAAI,CAACE,IAAD,CAAtC;AACD;;AAED,SAAOF,IAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = builder;\n\nvar _definitions = require(\"../definitions\");\n\nvar _validate = require(\"../validators/validate\");\n\nfunction builder() {\n  const type = this;\n  const keys = _definitions.BUILDER_KEYS[type];\n  const countArgs = arguments.length;\n\n  if (countArgs > keys.length) {\n    throw new Error(`${type}: Too many arguments passed. Received ${countArgs} but can receive no more than ${keys.length}`);\n  }\n\n  const node = {\n    type\n  };\n\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n    const field = _definitions.NODE_FIELDS[type][key];\n    let arg;\n    if (i < countArgs) arg = arguments[i];\n\n    if (arg === undefined) {\n      arg = Array.isArray(field.default) ? [] : field.default;\n    }\n\n    node[key] = arg;\n  }\n\n  for (const key in node) {\n    (0, _validate.default)(node, key, node[key]);\n  }\n\n  return node;\n}"]},"metadata":{},"sourceType":"script"}