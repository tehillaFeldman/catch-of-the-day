{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/tehillafeldman/Documents/repos/personal/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toIdentifier;\n\nvar _isValidIdentifier = require(\"../validators/isValidIdentifier\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nfunction toIdentifier(input) {\n  input = input + \"\";\n  var name = \"\";\n\n  var _iterator = _createForOfIteratorHelper(input),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var c = _step.value;\n      name += (0, _helperValidatorIdentifier.isIdentifierChar)(c.codePointAt(0)) ? c : \"-\";\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  name = name.replace(/^[-0-9]+/, \"\");\n  name = name.replace(/[-\\s]+(.)?/g, function (match, c) {\n    return c ? c.toUpperCase() : \"\";\n  });\n\n  if (!(0, _isValidIdentifier.default)(name)) {\n    name = \"_\".concat(name);\n  }\n\n  return name || \"_\";\n}","map":{"version":3,"sources":["/Users/tehillafeldman/Documents/repos/personal/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/@babel/types/lib/converters/toIdentifier.js"],"names":["Object","defineProperty","exports","value","default","toIdentifier","_isValidIdentifier","require","_helperValidatorIdentifier","input","name","c","isIdentifierChar","codePointAt","replace","match","toUpperCase"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,YAAlB;;AAEA,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,iCAAD,CAAhC;;AAEA,IAAIC,0BAA0B,GAAGD,OAAO,CAAC,oCAAD,CAAxC;;AAEA,SAASF,YAAT,CAAsBI,KAAtB,EAA6B;AAC3BA,EAAAA,KAAK,GAAGA,KAAK,GAAG,EAAhB;AACA,MAAIC,IAAI,GAAG,EAAX;;AAF2B,6CAIXD,KAJW;AAAA;;AAAA;AAI3B,wDAAuB;AAAA,UAAZE,CAAY;AACrBD,MAAAA,IAAI,IAAI,CAAC,GAAGF,0BAA0B,CAACI,gBAA/B,EAAiDD,CAAC,CAACE,WAAF,CAAc,CAAd,CAAjD,IAAqEF,CAArE,GAAyE,GAAjF;AACD;AAN0B;AAAA;AAAA;AAAA;AAAA;;AAQ3BD,EAAAA,IAAI,GAAGA,IAAI,CAACI,OAAL,CAAa,UAAb,EAAyB,EAAzB,CAAP;AACAJ,EAAAA,IAAI,GAAGA,IAAI,CAACI,OAAL,CAAa,aAAb,EAA4B,UAAUC,KAAV,EAAiBJ,CAAjB,EAAoB;AACrD,WAAOA,CAAC,GAAGA,CAAC,CAACK,WAAF,EAAH,GAAqB,EAA7B;AACD,GAFM,CAAP;;AAIA,MAAI,CAAC,CAAC,GAAGV,kBAAkB,CAACF,OAAvB,EAAgCM,IAAhC,CAAL,EAA4C;AAC1CA,IAAAA,IAAI,cAAOA,IAAP,CAAJ;AACD;;AAED,SAAOA,IAAI,IAAI,GAAf;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toIdentifier;\n\nvar _isValidIdentifier = require(\"../validators/isValidIdentifier\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nfunction toIdentifier(input) {\n  input = input + \"\";\n  let name = \"\";\n\n  for (const c of input) {\n    name += (0, _helperValidatorIdentifier.isIdentifierChar)(c.codePointAt(0)) ? c : \"-\";\n  }\n\n  name = name.replace(/^[-0-9]+/, \"\");\n  name = name.replace(/[-\\s]+(.)?/g, function (match, c) {\n    return c ? c.toUpperCase() : \"\";\n  });\n\n  if (!(0, _isValidIdentifier.default)(name)) {\n    name = `_${name}`;\n  }\n\n  return name || \"_\";\n}"]},"metadata":{},"sourceType":"script"}